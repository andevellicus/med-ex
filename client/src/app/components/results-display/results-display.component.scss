/* src/app/components/results-display/results-display.component.scss */

.results-container {
  position: relative; // Needed for absolute positioning of loading overlay
  min-height: 200px; // Ensure container has some height initially
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.7); // Semi-transparent white overlay
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 10; // Ensure it's above other content

  p {
    margin-top: 16px;
    font-weight: 500;
  }
}

// Add styles for dark mode if needed
body.dark-theme .loading-overlay {
    background-color: rgba(66, 66, 66, 0.7); // Darker overlay for dark theme
}


.error-panel {
    margin-bottom: 16px;
    background-color: #fff0f0; // Light red background for error panel
    border: 1px solid #ffc0c0;

    mat-icon {
        margin-right: 8px;
    }
}

body.dark-theme .error-panel {
    background-color: #4d2f2f;
    border: 1px solid #7c4a4a;
}

.results-card, .no-results-card {
  // Add any specific card styling if needed
}

.extracted-text {
  white-space: pre-wrap; // Preserve whitespace and wrap text
  word-break: break-word; // Break long words
  font-family: monospace; // Optional: Use monospace for pre-like formatting
  line-height: 1.6;
  padding: 16px; // Add padding inside the pre area
  background-color: rgba(0,0,0,0.02); // Slight background for text area
  border-radius: 4px;
}

body.dark-theme .extracted-text {
    background-color: rgba(255,255,255,0.05);
}

.placeholder-text {
    color: rgba(0,0,0,0.54);
    text-align: center;
    padding: 40px 20px;
}

body.dark-theme .placeholder-text {
    color: rgba(255,255,255,0.7);
}

// Styles for highlighted text will be added later
mark {
  background-color: yellow; // Basic highlight
  padding: 0.1em 0.2em;
  border-radius: 3px;
  cursor: pointer;
  // Add more specific styles based on entity type later
}


.highlighted-text-container {
  white-space: pre-wrap;
  word-break: break-word;
  font-family: 'Roboto', sans-serif; // Use a more standard font for selection
  line-height: 1.9; // Increase for better selection/highlight visibility
  padding: 16px;
  background-color: #f9f9f9; // Slightly off-white background
  border-radius: 4px;
  border: 1px solid #eee;
  min-height: 100px; // Ensure it has some height even when empty
  cursor: text; // Indicate text is selectable

  user-select: text; /* Standard */
  -webkit-user-select: text; /* Safari */
  -moz-user-select: text; /* Firefox */
  -ms-user-select: text; /* IE/Edge */

  mark {
    display: inline;
    padding: 0px 1px;
    margin: 0;
    border-radius: 3px;
  }

  span { // Base style for segments
      display: inline; // Allow context borders to wrap lines if needed
      padding: 0; // Reset padding
      margin: 0;  // Reset margin
      line-height: inherit; // Inherit from container
    }

  .context-span {
        // Apply context styling
        border: 1px dashed rgba(0, 0, 255, 0.5); // Example: semi-transparent blue dashed border
        // padding: 0 1px; // Minimal padding inside border
        margin: 0; // Minimal margin between bordered segments
        border-radius: 3px;
        background-color: rgba(230, 230, 255, 0.1); // Optional: slight background tint for context
    }

  mark.entity-annotation {
        // Ensure annotation mark style overrides/complements context style if nested
        padding: 0.15em 0.3em;
        margin: 0 0.1em;
        border-radius: 4px;
        cursor: pointer;
        box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        border: none; // Remove context border from the mark itself if desired
        position: relative; // Needed if you want tooltips/popups specific to the mark
        z-index: 1; // Ensure mark is visually 'above' the context span background/border slightly

        &:hover {
            box-shadow: 0 2px 4px rgba(0,0,0,0.15);
        }
    }

    // Style for the temporary highlight on scroll/click (keep this)
    mark.entity-annotation.active-highlight {
        outline: 2px solid #e91e63;
        outline-offset: 2px;
        transition: outline 0.1s linear;
        z-index: 2; // Ensure active highlight is above others
    }
}

body.dark-theme .highlighted-text-container {
    background-color: #333;
    border-color: #444;
}