/* src/index.css */

/* General Styles */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Class to hide scrollbar but keep functionality */
.hide-scrollbar::-webkit-scrollbar {
  display: none; /* For Chrome, Safari, and Opera */
}
.hide-scrollbar {
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
  scrollbar-width: none; /* For Firefox */
  /* Ensure overflow is still enabled to allow scrolling */
  /* The actual overflow value (auto/scroll) should be set on the element itself */
}

/* Style the content wrapper INSIDE the panes */
/* Keep this class if you use it for consistent padding/layout within Panels */
.pane-content-wrapper {
    padding: 16px;
    height: 100%;
    box-sizing: border-box; /* Include padding in height calculation */
    /* display: flex and flex-direction are now set on the Box sx prop in App.tsx */
    /* Remove flex properties here if set via sx */
    overflow: hidden; /* Prevent padding from causing scrollbars on the wrapper itself */
}

/* Ensure Paper inside panes takes full height if needed */
.pane-content-wrapper > .MuiPaper-root {
    height: 100%;
    /* display: flex and flex-direction: column are likely already set on the Paper sx */
    /* width: 100%; If Paper needs to fill wrapper horizontally */
}

/* Specific adjustments if needed */
.ResultsDisplayWrapper {
    padding: 0; /* Results display likely handles its own internal padding/scrolling */
}
.ResultsDisplayWrapper .MuiPaper-root {
    /* Remove default Paper styles if ResultsDisplay doesn't use Paper directly */
    /* border: none; */
    /* box-shadow: none; */
    /* background: transparent; */
}

/* --- ADDED Styles for react-resizable-panels Handles --- */
.resize-handle-outer,
.resize-handle-inner {
  width: 6px; /* Width of the vertical handle */
  background-color: #e0e0e0; /* A light grey color */
  cursor: col-resize;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;
}

.resize-handle-outer:hover,
.resize-handle-inner:hover {
  background-color: #bdbdbd; /* Darker grey on hover */
}

/* Optional: Style when dragging */
.resize-handle-outer[data-resize-handle-state="drag"],
.resize-handle-inner[data-resize-handle-state="drag"] {
  background-color: #9e9e9e; /* Even darker grey when dragging */
}

/* Optional: Add visual indicator dots/lines */
.resize-handle-outer::before,
.resize-handle-inner::before {
    content: '';
    display: block;
    width: 1px;
    height: 20px; /* Adjust height */
    background-color: #9e9e9e; /* Color of the dots/line */
    /* Use border-radius for dots, or leave as line */
    /* border-radius: 50%; */
}